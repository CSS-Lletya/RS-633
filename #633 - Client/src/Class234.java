/* Class234 - Decompiled by JODE
 * Visit http://jode.sourceforge.net/
 */

abstract class Class234 {
	static int anInt3202;
	static int anInt3203;
	static int anInt3204;
	static int anInt3205;
	static IncomingPacket aClass160_3206 = new IncomingPacket(27, 6);
	static byte aByte3207;
	static int[] anIntArray3208 = new int[2];
	static short[][][] aShortArrayArrayArray3209;
	private static short[][] aShortArrayArray3210;
	private static short[][] aShortArrayArray3211;
	private static short[][] aShortArrayArray3212;

	static final short[] method1492(short[] is, byte i, int i_0_) {
		try {
			anInt3204++;
			short[] is_1_ = new short[i_0_];
			if (i != 127)
				aClass160_3206 = null;
			Class311.method1900(is, 0, is_1_, 0, i_0_);
			return is_1_;
		} catch (RuntimeException runtimeexception) {
			throw Class205.method1298(runtimeexception,
					("mf.J(" + (is != null ? "{...}" : "null") + ',' + i + ','
							+ i_0_ + ')'));
		}
	}

	static final void method1493(String string, byte i) {
		do {
			try {
				anInt3203++;
				if (Class204.aBool2739 && (0x18 & Class322.anInt4312) != 0) {
					boolean bool = false;
					int i_2_ = Class190.anInt2446;
					int[] is = Class6.anIntArray40;
					for (int i_3_ = 0; (i_3_ ^ 0xffffffff) > (i_2_ ^ 0xffffffff); i_3_++) {
						Player class376_sub7_sub5_sub5_sub1 = (Class366.aClass376_Sub7_Sub5_Sub5_Sub1Array4814[is[i_3_]]);
						if (((Player) class376_sub7_sub5_sub5_sub1).aString10400 != null
								&& ((Player) class376_sub7_sub5_sub5_sub1).aString10400
										.equalsIgnoreCase(string)
								&& (((class376_sub7_sub5_sub5_sub1 == (Class11_Sub2_Sub8.myPlayer)) && (Class322.anInt4312 & 0x10) != 0) || (class376_sub7_sub5_sub5_sub1 != null && ((Class322.anInt4312 & 0x8 ^ 0xffffffff) != -1)))) {
							Class165.anInt2136++;
							Class11_Sub10 class11_sub10 = Class11_Sub48
									.method3215((Class11_Sub3.aClass25_5113),
											(Class265.aClass370_3615),
											(byte) 57);
							((Class11_Sub10) class11_sub10).aClass11_Sub20_Sub1_5397
									.writeShort128(Class11_Sub2_Sub22.anInt9206,
											(byte) -74);
							((Class11_Sub10) class11_sub10).aClass11_Sub20_Sub1_5397
									.writeShortLE(1815869672,
											Class120.anInt1631);
							((Class11_Sub10) class11_sub10).aClass11_Sub20_Sub1_5397
									.writeShortLE128((byte) 120, is[i_3_]);
							((Class11_Sub10) class11_sub10).aClass11_Sub20_Sub1_5397
									.writeByteC(0, (byte) 122);
							((Class11_Sub10) class11_sub10).aClass11_Sub20_Sub1_5397
									.writeInt(i ^ 0x28, Class163.anInt2113);
							Class79.method541(class11_sub10, i - 16);
							bool = true;
							Class64.method485(
									-2,
									0,
									i + 26,
									class376_sub7_sub5_sub5_sub1
											.method3968((byte) 127),
									class376_sub7_sub5_sub5_sub1
											.method3968((byte) 127),
									0,
									(((Actor) class376_sub7_sub5_sub5_sub1).anIntArray10370[0]),
									true,
									(((Actor) class376_sub7_sub5_sub5_sub1).anIntArray10376[0]));
							break;
						}
					}
					if (!bool)
						Class11_Sub2_Sub28
								.method3715(
										true,
										4,
										((Class26.aClass26_297
												.method217(
														(byte) 93,
														Class11_Sub45_Sub1_Sub2.anInt9884)) + string));
					if (Class204.aBool2739)
						Class11_Sub45_Sub5.method3436(-1);
					if (i == -25)
						break;
					method1497(-49);
				}
			} catch (RuntimeException runtimeexception) {
				throw Class205.method1298(runtimeexception, ("mf.K("
						+ (string != null ? "{...}" : "null") + ',' + i + ')'));
			}
			break;
		} while (false);
	}

	static final void method1494() {
		int i = 10;
		int i_4_ = 30;
		if (Class316.anInt4186 != 0 && Class91_Sub2.aClass107_7701 != null) {
			Class87.aClass163_1210.K(Applet_Sub1.anIntArray10472);
			for (int i_5_ = 0; i_5_ < Class11_Sub45_Sub1_Sub2.anIntArray9878.length; i_5_++)
				Class87.aClass163_1210
						.method1022(
								121,
								(Class11_Sub45_Sub1_Sub2.anIntArray9878[i_5_] + Class2_Sub8.anIntArray6861[i_5_]),
								Applet_Sub1.anIntArray10472[1],
								(Applet_Sub1.anIntArray10472[3] - Applet_Sub1.anIntArray10472[1]),
								-256);
			for (int i_6_ = 0; i_6_ < Class108_Sub16.anInt6551; i_6_++) {
				Class203 class203 = Class93.aClass203Array1248[i_6_];
				Class87.aClass163_1210.H(
						((Class203) class203).anIntArray2724[0],
						((Class203) class203).anIntArray2734[0],
						((Class203) class203).anIntArray2725[0],
						Class16.anIntArray141);
				Class87.aClass163_1210.H(
						((Class203) class203).anIntArray2724[1],
						((Class203) class203).anIntArray2734[1],
						((Class203) class203).anIntArray2725[1],
						Class11_Sub2_Sub15.anIntArray9030);
				Class87.aClass163_1210.H(
						((Class203) class203).anIntArray2724[2],
						((Class203) class203).anIntArray2734[2],
						((Class203) class203).anIntArray2725[2],
						Class108_Sub10.anIntArray6133);
				Class87.aClass163_1210.H(
						((Class203) class203).anIntArray2724[3],
						((Class203) class203).anIntArray2734[3],
						((Class203) class203).anIntArray2725[3],
						Class11_Sub12.anIntArray5444);
				if (Class16.anIntArray141[2] != -1
						&& Class11_Sub2_Sub15.anIntArray9030[2] != -1
						&& Class108_Sub10.anIntArray6133[2] != -1
						&& Class11_Sub12.anIntArray5444[2] != -1) {
					int i_7_ = -65536;
					if (((Class203) class203).aByte2731 == 4)
						i_7_ = -16776961;
					Class87.aClass163_1210.method1029(113,
							Class16.anIntArray141[1],
							Class11_Sub2_Sub15.anIntArray9030[1],
							Class11_Sub2_Sub15.anIntArray9030[0], i_7_,
							Class16.anIntArray141[0]);
					Class87.aClass163_1210.method1029(66,
							Class11_Sub2_Sub15.anIntArray9030[1],
							Class108_Sub10.anIntArray6133[1],
							Class108_Sub10.anIntArray6133[0], i_7_,
							Class11_Sub2_Sub15.anIntArray9030[0]);
					Class87.aClass163_1210.method1029(57,
							Class108_Sub10.anIntArray6133[1],
							Class11_Sub12.anIntArray5444[1],
							Class11_Sub12.anIntArray5444[0], i_7_,
							Class108_Sub10.anIntArray6133[0]);
					Class87.aClass163_1210.method1029(124,
							Class11_Sub12.anIntArray5444[1],
							Class16.anIntArray141[1], Class16.anIntArray141[0],
							i_7_, Class11_Sub12.anIntArray5444[0]);
					Class87.aClass163_1210.method1029(88,
							Class16.anIntArray141[1],
							Class108_Sub10.anIntArray6133[1],
							Class108_Sub10.anIntArray6133[0], i_7_,
							Class16.anIntArray141[0]);
				}
			}
			Class91_Sub2.aClass107_7701.method708(i, 173, -256, i_4_ + 45,
					("Dynamic: " + Class174.anInt2226 + "/" + 5000), -16777216);
			Class91_Sub2.aClass107_7701
					.method708(
							i,
							173,
							-256,
							i_4_ + 60,
							("Total Opaque Onscreen: " + Class12.anInt96 + "/" + 10000),
							-16777216);
			Class91_Sub2.aClass107_7701
					.method708(i, 173, -256, i_4_ + 75,
							("Total Trans Onscreen: "
									+ (Class376_Sub7_Sub2_Sub1.anInt10206)
									+ "/" + 5000), -16777216);
			Class91_Sub2.aClass107_7701.method708(i, 173, -256, i_4_ + 90,
					("Occluders: "
							+ (Class142.anInt1926 + (Class11_Sub30.anInt6612))
							+ " Active: " + Class108_Sub16.anInt6551),
					-16777216);
			Class91_Sub2.aClass107_7701
					.method708(
							i,
							173,
							-256,
							i_4_ + 105,
							("Occluded: Ground:" + Class2.anInt19 + " Walls: "
									+ Class201.anInt2711 + " CPs: "
									+ Class112.anInt1540 + " Pixels: " + Class217.anInt3003),
							-16777216);
			Class91_Sub2.aClass107_7701.method708(i, 173, -256, i_4_ + 120,
					("Occlude Calc Took: " + (Class11_Sub2_Sub10.aLong8850)
							/ 1000L + "us"), -16777216);
			if (Class316.anInt4186 == 2
					&& Class11_Sub2_Sub1.anIntArray8436 != null) {
				for (int i_8_ = 0; i_8_ < Class11_Sub2_Sub1.anIntArray8436.length; i_8_++) {
					float f = (float) Class11_Sub2_Sub1.anIntArray8436[i_8_];
					f /= 4194304.0F;
					if (f > 1.0F)
						f = 1.0F;
					f *= 255.0F;
					f = 255.0F - f;
					int i_9_ = (int) f;
					Class11_Sub2_Sub1.anIntArray8436[i_8_] = i_9_ | i_9_ << 8
							| i_9_ << 16 | ~0xffffff;
				}
				Class253 class253 = Class87.aClass163_1210.method1040(
						Class2_Sub1.anInt5065, Class6.anInt39,
						(Class11_Sub2_Sub1.anIntArray8436), -1,
						Class2_Sub1.anInt5065, 0);
				class253.method1624(i, 170, 1, 0, 0);
			}
		}
	}

	static final boolean method1495(boolean bool, int i, int i_10_) {
		try {
			anInt3205++;
			if (bool != false)
				return false;
			if ((i_10_ & 0x84080) == 0)
				return false;
			return true;
		} catch (RuntimeException runtimeexception) {
			throw Class205.method1298(runtimeexception, ("mf.M(" + bool + ','
					+ i + ',' + i_10_ + ')'));
		}
	}

	public static void method1496(boolean bool) {
		try {
			aClass160_3206 = null;
			aShortArrayArray3212 = null;
			aShortArrayArray3210 = null;
			anIntArray3208 = null;
			aShortArrayArray3211 = null;
			if (bool == true)
				aShortArrayArrayArray3209 = null;
		} catch (RuntimeException runtimeexception) {
			throw Class205.method1298(runtimeexception, "mf.L(" + bool + ')');
		}
	}

	static final void method1497(int i) {
		try {
			if ((Class11_Sub2_Sub5.anInt8559 ^ 0xffffffff) < -1) {
				int i_11_ = 0;
				for (int i_12_ = 0; i_12_ < Class11_Sub2_Sub6.aStringArray8706.length; i_12_++) {
					if ((Class11_Sub2_Sub6.aStringArray8706[i_12_]
							.indexOf("--> ") ^ 0xffffffff) != 0
							&& ((Class11_Sub2_Sub5.anInt8559 ^ 0xffffffff) == (++i_11_ ^ 0xffffffff))) {
						Class267.aString3625 = (Class11_Sub2_Sub6.aStringArray8706[i_12_]
								.substring(Class11_Sub2_Sub6.aStringArray8706[i_12_]
										.indexOf(">") + 2));
						break;
					}
				}
			} else
				Class267.aString3625 = "";
			anInt3202++;
			int i_13_ = -47 % ((-62 - i) / 59);
		} catch (RuntimeException runtimeexception) {
			throw Class205.method1298(runtimeexception, "mf.I(" + i + ')');
		}
	}

	public Class234() {
		/* empty */
	}

	static {
		new Class298("", 73);
		aShortArrayArray3210 = (new short[][] {
				{ 6798, 107, 10283, 16, 4797, 7744, 5799, 4634, -31839, 22433,
						2983, -11343, 8, 5281, 10438, 3650, -27322, -21845,
						200, 571, 908, 21830, 28946, -15701, -14010 },
				{ 8741, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094,
						10153, -8915, 4783, 1341, 16578, -30533, 25239, 8,
						5281, 10438, 3650, -27322, -21845, 200, 571, 908,
						21830, 28946, -15701, -14010, 7085, 4001, 317, 918,
						9517, 9125, 3608, 16450, -32593, 22026, 2700, -22256,
						10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
						8637, -26428, 26785, -15202, 8736, 2994, -25710, 928,
						6859, -25016, -5449, -14823, -23401, 12, -22456,
						-27471, -11229, 21673, 57, -24046, -27190, -22877,
						-30041, 20013, 21596, -31414, 29000, -11209, 6361,
						-25552, -25450, -14174, -10998, -27357, 3249, 7465,
						8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756,
						-28220, -26323, -23901, -31385, -32342, -29806, -29902,
						-24128, 933, 1189, 3873, 6057, 8590, 1812, 4895, -5366,
						15019, 20793, 7599, 9536, 21778, 14102, 6938, 14648,
						5919, 6472, 10128, 17940, 3226, 267, 5421, -27570,
						-25177, -26319, -28217, -28132, -23792, -23249, -23001,
						-19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
						10382, 6826, 7442, 158, 2454, 9655, -27496, -27578,
						-31687, 11146, 18712, 10785, 21902, 10566, 9500, 11819,
						11144, -15965, -24170, -32488, -29277, 29097, -9567,
						-18794, -27116, 921, 6028, 2974, -5230, 6550, 15244,
						14, 49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825,
						28978, -25278, 30876, 13475, -28395, -24010, -14027,
						-22454, -18158, 20503, -27618, -22258, -1776, -31468,
						9616, 7333, 650, 784, 796, 813, -616, -3194, -8152,
						1686, 29074, 22422, -32245, 29084, 22411, -22000, 3982,
						7062, 10382, 3230, 8076, 20, 1936, 10, -22473, 4892,
						5805, 5904, 10, 48, 1936, 5640, 8472, -25529 },
				{ 25238, 8742, 12, -1506, -22374, 7735, 8404, 1701, -27106,
						24094, 10153, -8915, 4783, 1341, 16578, -30533, 8,
						5281, 10438, 3650, -27322, -21845, 200, 571, 908,
						21830, 28946, -15701, -14010, 7085, 4001, 317, 918,
						9517, 9125, 3608, 16450, -32593, 22026, 2700, -22256,
						10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
						8637, -26428, 26785, -15202, 8736, 2994, -25710, 928,
						6859, -25016, -5449, -14823, -23401, 12, -22456,
						-27471, -11229, 21673, 57, -24046, -27190, -22877,
						-30041, 20013, 21596, -31414, 29000, -11209, 6361,
						-25552, -25450, -14174, -10998, -27357, 3249, 7465,
						8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756,
						-28220, -26323, -23901, -31385, -32342, -29806, -29902,
						-24128, 933, 1189, 3873, 6057, 8590, 1812, 4895, -5366,
						15019, 20793, 7599, 9536, 21778, 14102, 6938, 14648,
						5919, 6472, 10128, 17940, 3226, 267, 5421, -27570,
						-25177, -26319, -28217, -28132, -23792, -23249, -23001,
						-19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
						10382, 6826, 7442, 158, 2454, 9655, -27496, -27578,
						-31687, 11146, 18712, 10785, 21902, 10566, 9500, 11819,
						11144, -15965, -24170, -32488, -29277, 29097, -9567,
						-18794, -27116, 921, 6028, 2974, -5230, 6550, 15244,
						14, 49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825,
						28978, -25278, 30876, 13475, -28395, -24010, -14027,
						-22454, -18158, 20503, -27618, -22258, -1776, -31468,
						9616, 7333, 650, 784, 796, 813, -616, -3194, -8152,
						1686, 29074, 22422, -32245, 29084, 22411, -22000, 3982,
						7062, 10382, 3230, 8076, 20, 1936, 10, -22473, 4892,
						5805, 5904, 10, 48, 1936, 5640, 8472, -25529 },
				{ 4626, 11146, 6439, 12, 4758, 10270, 7085, 4001, 317, 918,
						9517, 9125, 3608, 16450, -32593, 22026, 2700, -22256,
						10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
						8637, -26428, 26785, -15202, 8736, 2994, -25710, 928,
						6859, -25016, -5449, -14823, -23401, 12, -22456,
						-27471, -11229, 21673, 57, -24046, -27190, -22877,
						-30041, 20013, 21596, -31414, 29000, -11209, 6361,
						-25552, -25450, -14174, -10998, -27357, 3249, 7465,
						8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756,
						-28220, -26323, -23901, -31385, -32342, -29806, -29902,
						-24128, 933, 1189, 3873, 6057, 8590, 1812, 4895, -5366,
						15019, 20793, 7599, 9536, 21778, 14102, 6938, 14648,
						5919, 6472, 10128, 17940, 3226, 267, 5421, -27570,
						-25177, -26319, -28217, -28132, -23792, -23249, -23001,
						-19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
						10382, 6826, 7442, 158, 2454, 9655, -27496, -27578,
						-31687, 11146, 18712, 10785, 21902, 10566, 9500, 11819,
						11144, -15965, -24170, -32488, -29277, 29097, -9567,
						-18794, -27116, 921, 6028, 2974, -5230, 6550, 15244,
						14, 49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825,
						28978, -25278, 30876, 13475, -28395, -24010, -14027,
						-22454, -18158, 20503, -27618, -22258, -1776, -31468,
						9616, 7333, 650, 784, 796, 813, -616, -3194, -8152,
						1686, 29074, 22422, -32245, 29084, 22411, -22000, 3982,
						7062, 10382, 3230, 8076, 20, 1936, 10, -22473, 4892,
						5805, 5904, 10, 48, 1936, 5640, 8472, -25529 },
				{ 4550, 4537, 5681, 5673, 5790, 6806, 8076, 4574, 4444, 4328,
						7052, 4490 } });
		aShortArrayArray3211 = new short[][] { new short[0], new short[0],
				new short[0], new short[0], new short[0] };
		aShortArrayArray3212 = (new short[][] {
				{ 6554, 115, 10304, 28, 5702, 7756, 5681, 4510, -31835, 22437,
						2859, -11339, 16, 5157, 10446, 3658, -27314, -21965,
						472, 580, 784, 21966, 28950, -15697, -14002 },
				{ 9104, 10275, 7595, 3610, 7975, 8526, 918, -26734, 24466,
						10145, -6882, 5027, 1457, 16565, -30545, 25486, 24,
						5392, 10429, 3673, -27335, -21957, 192, 687, 412,
						21821, 28835, -15460, -14019, 7072, 3990, 309, 910,
						9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264,
						10281, 3869, -28007, 10764, 8974, 3745, 10269, 914,
						8629, -26438, 26779, -15208, 8728, 2982, -25718, 918,
						6842, -25030, -5462, -14833, -22386, 8, -22468, -27479,
						-11237, 21664, 45, -24054, -27207, -22887, -30051,
						20003, 21584, -31426, 28990, -11219, 6353, -25560,
						-25458, -14182, -11006, -27365, 3241, 7457, 8899,
						13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
						-26333, -23910, -31403, -32352, -29812, -29909, -24137,
						925, 1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011,
						20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911,
						6463, 10124, 17935, 3218, 262, 5413, -27579, -25189,
						-26331, -28236, -28144, -23804, -23261, -23013, -19045,
						5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819,
						7434, 150, 2446, 9647, -27504, -27586, -31695, 11142,
						18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978,
						-24180, -32498, -29288, 29084, -9579, -18799, -27122,
						913, 6024, 2966, -5238, 6542, 15240, 10, 39, 3986,
						2324, 6030, -31709, 512, 33, 9394, -4833, 28967,
						-25290, 30866, 13466, -28403, -24022, -14042, -22472,
						-18166, 20493, -27626, -22266, -1784, -31473, 9612,
						7324, 646, 778, 786, 800, -624, -3198, -8164, 1678,
						29068, 22412, -32253, 29075, 22404, -22006, 3974, 7054,
						10376, 3222, 8070, 12, 1930, 2, -22481, 4884, 5797,
						5900, 6, 40, 1932, 5638, 8466, -25537 },
				{ 25485, 9105, 10275, 7595, 3610, 7975, 8526, 918, -26734,
						24466, 10145, -6882, 5027, 1457, 16565, -30545, 24,
						5392, 10429, 3673, -27335, -21957, 192, 687, 412,
						21821, 28835, -15460, -14019, 7072, 3990, 309, 910,
						9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264,
						10281, 3869, -28007, 10764, 8974, 3745, 10269, 914,
						8629, -26438, 26779, -15208, 8728, 2982, -25718, 918,
						6842, -25030, -5462, -14833, -22386, 8, -22468, -27479,
						-11237, 21664, 45, -24054, -27207, -22887, -30051,
						20003, 21584, -31426, 28990, -11219, 6353, -25560,
						-25458, -14182, -11006, -27365, 3241, 7457, 8899,
						13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
						-26333, -23910, -31403, -32352, -29812, -29909, -24137,
						925, 1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011,
						20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911,
						6463, 10124, 17935, 3218, 262, 5413, -27579, -25189,
						-26331, -28236, -28144, -23804, -23261, -23013, -19045,
						5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819,
						7434, 150, 2446, 9647, -27504, -27586, -31695, 11142,
						18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978,
						-24180, -32498, -29288, 29084, -9579, -18799, -27122,
						913, 6024, 2966, -5238, 6542, 15240, 10, 39, 3986,
						2324, 6030, -31709, 512, 33, 9394, -4833, 28967,
						-25290, 30866, 13466, -28403, -24022, -14042, -22472,
						-18166, 20493, -27626, -22266, -1784, -31473, 9612,
						7324, 646, 778, 786, 800, -624, -3198, -8164, 1678,
						29068, 22412, -32253, 29075, 22404, -22006, 3974, 7054,
						10376, 3222, 8070, 12, 1930, 2, -22481, 4884, 5797,
						5900, 6, 40, 1932, 5638, 8466, -25537 },
				{ 4620, 11140, 6433, 6, 4752, 10264, 7072, 3990, 309, 910,
						9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264,
						10281, 3869, -28007, 10764, 8974, 3745, 10269, 914,
						8629, -26438, 26779, -15208, 8728, 2982, -25718, 918,
						6842, -25030, -5462, -14833, -22386, 8, -22468, -27479,
						-11237, 21664, 45, -24054, -27207, -22887, -30051,
						20003, 21584, -31426, 28990, -11219, 6353, -25560,
						-25458, -14182, -11006, -27365, 3241, 7457, 8899,
						13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
						-26333, -23910, -31403, -32352, -29812, -29909, -24137,
						925, 1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011,
						20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911,
						6463, 10124, 17935, 3218, 262, 5413, -27579, -25189,
						-26331, -28236, -28144, -23804, -23261, -23013, -19045,
						5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819,
						7434, 150, 2446, 9647, -27504, -27586, -31695, 11142,
						18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978,
						-24180, -32498, -29288, 29084, -9579, -18799, -27122,
						913, 6024, 2966, -5238, 6542, 15240, 10, 39, 3986,
						2324, 6030, -31709, 512, 33, 9394, -4833, 28967,
						-25290, 30866, 13466, -28403, -24022, -14042, -22472,
						-18166, 20493, -27626, -22266, -1784, -31473, 9612,
						7324, 646, 778, 786, 800, -624, -3198, -8164, 1678,
						29068, 22412, -32253, 29075, 22404, -22006, 3974, 7054,
						10376, 3222, 8070, 12, 1930, 2, -22481, 4884, 5797,
						5900, 6, 40, 1932, 5638, 8466, -25537 },
				{ 4540, 4529, 5674, 5667, 5785, 6802, 8072, 4562, 4437, 4317,
						5896, 4488 } });
		aShortArrayArrayArray3209 = new short[][][] { aShortArrayArray3210,
				aShortArrayArray3212, aShortArrayArray3211 };
	}
}
