int script_5764(int arg0,int arg1,int arg2) {
	int ivar3;
	int ivar4;
	int ivar5;
	int ivar6;
	int ivar7;
	int ivar8;
	int ivar9;
	int ivar10;
	int ivar11;
	int ivar12;
	int ivar13;
	int ivar14;
	int ivar15;
	ivar3 = -1;
	ivar4 = -1;
	ivar5 = -1;
	ivar6 = -1;
	ivar7 = -1;
	ivar8 = -1;
	ivar9 = -1;
	ivar10 = -1;
	if (arg2 == -1) {
		arg2 = 0;
	}
	ivar11 = getDataByKey('i', 'J', arg1, arg2);
	ivar9 = getDataByKey('J', 'J', 5483, ivar11);
	if (ivar9 != -1) {
		ivar11 = ivar9;
	}
	ivar12 = getGeneralRequirementAttribute(ivar11, 2232);
	ivar13 = subtract(cs2method_10624(arg1), 1);
	ivar14 = 0;
	while (ivar13 >= 0 && ivar14 == 0) {
		flow_5:
			ivar8 = getDataByKey('i', 'J', arg1, ivar13);
			ivar9 = getDataByKey('J', 'J', 5483, ivar8);
			if (ivar9 != -1) {
				ivar8 = ivar9;
			}
			IF (script_3227(getGeneralRequirementAttribute(ivar8, 1268)) != 2) 
				GOTO	flow_10
			IF (script_5732(ivar8) != 0 && script_5729(ivar8, arg0) == 1) 
				GOTO	flow_11
			GOTO	flow_50
		flow_10:
		flow_11:
			if (script_3224(getGeneralRequirementAttribute(ivar8, 1268)) == 1) {
				ivar10 = getGeneralRequirementAttribute(ivar8, 2232);
				if (ivar10 == ivar12) {
					if (ivar13 != arg2) {
						switch (ivar10) {
							case 4:
								if (ivar13 > ivar3 || ivar13 < ivar3 && ivar3 > arg2) {
									ivar3 = ivar13;
								}
								break;
							case 3:
								if (ivar13 > ivar4 || ivar13 < ivar4 && ivar4 > arg2) {
									ivar4 = ivar13;
								}
								break;
							case 2:
								if (ivar13 > ivar5 || ivar13 < ivar5 && ivar5 > arg2) {
									ivar5 = ivar13;
								}
								break;
							case 1:
								if (ivar13 > ivar6 || ivar13 < ivar6 && ivar6 > arg2) {
									ivar6 = ivar13;
								}
								break;
							case 0:
								if (ivar13 > ivar7 || ivar13 < ivar7 && ivar7 > arg2) {
									ivar7 = ivar13;
								}
						}
					}
				} else {
					switch (ivar10) {
						case 4:
							if (ivar13 > ivar3) {
								ivar3 = ivar13;
							}
							break;
						case 3:
							if (ivar13 > ivar4) {
								ivar4 = ivar13;
							}
							break;
						case 2:
							if (ivar13 > ivar5) {
								ivar5 = ivar13;
							}
							break;
						case 1:
							if (ivar13 > ivar6) {
								ivar6 = ivar13;
							}
							break;
						case 0:
							if (ivar13 > ivar7) {
								ivar7 = ivar13;
							}
					}
				}
			}
		flow_50:
			ivar13 = subtract(ivar13, 1);
	}
	ivar15 = -1;
	switch (ivar12) {
		case 4:
			if (ivar3 < arg2 && ivar3 > -1) {
				ivar15 = ivar3;
			} else if (ivar4 > -1) {
				ivar15 = ivar4;
			} else if (ivar5 > -1) {
				ivar15 = ivar5;
			} else if (ivar6 > -1) {
				ivar15 = ivar6;
			} else if (ivar7 > -1) {
				ivar15 = ivar7;
			} else {
				if (ivar3 > -1) {
					ivar15 = ivar3;
				}
			}
			break;
		case 3:
			if (ivar4 < arg2 && ivar4 > -1) {
				ivar15 = ivar4;
			} else if (ivar5 > -1) {
				ivar15 = ivar5;
			} else if (ivar6 > -1) {
				ivar15 = ivar6;
			} else if (ivar7 > -1) {
				ivar15 = ivar7;
			} else if (ivar3 > -1) {
				ivar15 = ivar3;
			} else {
				if (ivar4 > -1) {
					ivar15 = ivar4;
				}
			}
			break;
		case 2:
			if (ivar5 < arg2 && ivar5 > -1) {
				ivar15 = ivar5;
			} else if (ivar6 > -1) {
				ivar15 = ivar6;
			} else if (ivar7 > -1) {
				ivar15 = ivar7;
			} else if (ivar3 > -1) {
				ivar15 = ivar3;
			} else if (ivar4 > -1) {
				ivar15 = ivar4;
			} else {
				if (ivar5 > -1) {
					ivar15 = ivar5;
				}
			}
			break;
		case 1:
			if (ivar6 < arg2 && ivar6 > -1) {
				ivar15 = ivar6;
			} else if (ivar7 > -1) {
				ivar15 = ivar7;
			} else if (ivar3 > -1) {
				ivar15 = ivar3;
			} else if (ivar4 > -1) {
				ivar15 = ivar4;
			} else if (ivar5 > -1) {
				ivar15 = ivar5;
			} else {
				if (ivar6 > -1) {
					ivar15 = ivar6;
				}
			}
			break;
		case 0:
			if (ivar7 < arg2 && ivar7 > -1) {
				ivar15 = ivar7;
			} else if (ivar3 > -1) {
				ivar15 = ivar3;
			} else if (ivar4 > -1) {
				ivar15 = ivar4;
			} else if (ivar5 > -1) {
				ivar15 = ivar5;
			} else if (ivar6 > -1) {
				ivar15 = ivar6;
			} else {
				if (ivar7 > -1) {
					ivar15 = ivar7;
				}
			}
	}
	return ivar15;
}
