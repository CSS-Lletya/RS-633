package com.rs.game.player.content;

import com.rs.Settings;
import com.rs.game.item.Item;
import com.rs.game.player.Player;
import com.rs.net.decoders.handlers.InventoryOptionsHandler;

public class WeaponPoison {

    public static enum Weapon {
	BRONZE_DART(806, 812, 5628, 5635), IRON_DART(807, 813, 5629, 5636), STEEL_DART(808, 814, 5630, 5637), MITHRIL_DART(809, 815, 5632, 5639), ADAMANT_DART(810, 816, 5633, 5640), RUNE_DART(811, 817, 5634, 5641), BRONZE_JAVELIN(825, 831, 5642, 5648), IRON_JAVELIN(826, 832, 5643, 5649), STEEL_JAVELIN(827, 833, 5644, 5650), MITHRIL_JAVELIN(828, 834, 5645, 5651), ADAMANT_JAVELIN(829, 835, 5646, 5652), RUNE_JAVELIN(830, 836, 5647, 5653), IRON_KNIFE(863, 871, 5655, 5662), BRONZE_KNIFE(864, 870, 5654, 5661), STEEL_KNIFE(865, 872, 5656, 5663), MITHRIL_KNIFE(866, 873, 5657, 5664), ADAMANT_KNIFE(867, 875, 5659, 5666), RUNE_KNIFE(868, 876, 5660, 5667), BLACK_KNIFE(869, 874, 5658, 5665), BRONZE_BOLTS(877, 878, 6061, 6062), BRONZE_ARROW(882, 883, 5616, 5622), IRON_ARROW(884, 885, 5617, 5623), STEEL_ARROW(886, 887, 5618, 5624), MITHRIL_ARROW(888, 889, 5619, 5625), ADAMANT_ARROW(890, 891, 5620, 5626), RUNE_ARROW(892, 893, 5621, 5627), IRON_DAGGER(1203, 1219, 5668, 5686), BRONZE_DAGGER(1205, 1221, 5670, 5688), STEEL_DAGGER(1207, 1223, 5672, 5690), MITHRIL_DAGGER(1209, 1225, 5674, 5692), ADAMANT_DAGGER(1211, 1227, 5676, 5694), RUNE_DAGGER(1213, 1229, 5678, 5696), DRAGON_DAGGER(1215, 1231, 5680, 5698), BLACK_DAGGER(1217, 1233, 5682, 5700), BRONZE_SPEAR(1237, 1251, 5704, 5718), IRON_SPEAR(1239, 1253, 5706, 5720), STEEL_SPEAR(1241, 1255, 5708, 5722), MITHRIL_SPEAR(1243, 1257, 5710, 5724), ADAMANT_SPEAR(1245, 1259, 5712, 5726), RUNE_SPEAR(1247, 1261, 5714, 5728), DRAGON_SPEAR(1249, 1263, 5716, 5730), BLACK_DART(3093, 3094, 5631, 5638), BLACK_SPEAR(4580, 4582, 5734, 5736), WHITE_DAGGER(6591, 6593, 6595, 6597), BONE_DAGGER(8872, 8874, 8876, 8878), BLURITE_BOLTS(9139, 9286, 9293, 9300), IRON_BOLTS(9140, 9287, 9294, 9301), STEEL_BOLTS(9141, 9288, 9295, 9302), MITHRIL_BOLTS(9142, 9289, 9296, 9303), ADAMANT_BOLTS(9143, 9290, 9297, 9304), RUNITE_BOLTS(9144, 9291, 9298, 9305), SILVER_BOLTS(9145, 9292, 9299, 9306), KERIS(10581, 10582, 10583, 10584), DRAGON_ARROW(11212, 11227, 11228, 11229), DRAGON_DART(11230, 11231, 11233, 11234), BRONZE_HASTA(11367, 11379, 11382, 11384), IRON_HASTA(11369, 11386, 11389, 11391), STEEL_HASTA(11371, 11393, 11396, 11398), MITHRIL_HASTA(11373, 11400, 11403, 11405), ADAMANT_HASTA(11375, 11407, 11410, 11412), RUNE_HASTA(11377, 11414, 11417, 11419), BLACK_BOLTS(13083, 13084, 13085, 13086), MORRIGANS_JAVELIN(13879, 13880, 13881, 13882), NOVITE_ARROWS(16427, 15958, 15969, 15980), BATHUS_ARROWS(16432, 15959, 15970, 15981), MARMAROS_ARROWS(16437, 15960, 15971, 15982), KRATONITE_ARROWS(16442, 15961, 15972, 15983), FRACTITE_ARROWS(16447, 15962, 15973, 15984), ZEPHYRIUM_ARROWS(16452, 15963, 15974, 15985), ARGONITE_ARROWS(16457, 15964, 15975, 15986), KATAGON_ARROWS(16462, 15965, 15976, 15987), GORGONITE_ARROWS(16467, 15966, 15977, 15988), PROMETHIUM_ARROWS(16472, 15967, 15978, 15989), SAGITTARIAN_ARROWS(16477, 15968, 15979, 15990), NOVITE_DAGGER(16757, 15849, 15850, 15851), BATHUS_DAGGER(16765, 15853, 15854, 15855), MARMAROS_DAGGER(16773, 15857, 15858, 15859), KRATONITE_DAGGER(16781, 15861, 15862, 15863), FRACTITE_DAGGER(16789, 15865, 15866, 15867), ZEPHYRIUM_DAGGER(16797, 15869, 15870, 15871), ARGONITE_DAGGER(16805, 15873, 15874, 15875), KATAGON_DAGGER(16813, 15877, 15878, 15879), GORGONITE_DAGGER(16821, 15881, 15882, 15883), PROMETHIUM_DAGGER(16829, 15885, 15886, 15887), PRIMAL_DAGGER(16837, 15889, 15890, 15891), NOVITE_SPEAR(17063, 16219, 16220, 16221), BATHUS_SPEAR(17071, 16223, 16224, 16225), MARMAROS_SPEAR(17079, 16227, 16228, 16229), KRATONITE_SPEAR(17087, 16231, 16232, 16233), FRACTITE_SPEAR(17095, 16235, 16236, 16237), ZEPHYRIUM_SPEAR(17103, 16239, 16240, 16241), ARGONITE_SPEAR(17111, 16243, 16244, 16245), KATAGON_SPEAR(17119, 16247, 16248, 16249), GORGONITE_SPEAR(17127, 16251, 16252, 16253), PROMETHIUM_SPEAR(17135, 16255, 16256, 16257), PRIMAL_SPEAR(17143, 16259, 16260, 16261), DRAGONBANE_ARROW(21640, 21712, 21713, 21714), WALLASALKIBANE_ARROW(21645, 21726, 21727, 21728), BASILISKBANE_ARROW(21650, 21719, 21720, 21721), ABYSSALBANE_ARROW(21655, 21733, 21734, 21735), DRAGONBANE_BOLT(21660, 21680, 21681, 21682), WALLASALKIBANE_BOLT(21665, 21694, 21695, 21696), BASILISKBANE_BOLT(21670, 21687, 21688, 21689), ABYSSALBANE_BOLT(21675, 21701, 21702, 21703);

	private int id;
	private int[] poisonIds;

	private Weapon(int id, int... poisonIds) {
	    this.id = id;
	    this.poisonIds = poisonIds;
	}
    }
    
    private static Weapon getWeapon(int id) {
	for (Weapon weapon : Weapon.values())
	    if (weapon.id == id)
		    return weapon;
	return null;
    }
    
    public static int[] POISON = new int[] {187, 5937, 5940};
    
    public static boolean poison(Player player, Item item1, Item item2) {
	for(int i = 0; i < POISON.length; i++) {
		Item weapon = InventoryOptionsHandler.contains(POISON[i], item1, item2);
		if (weapon == null)
		    continue;
		return poison(player, weapon, i);
	}
	return false;
    }
    
    public static boolean poison(Player player, Item item, int type) {
	Weapon weapon = getWeapon(item.getId());
	if(weapon == null)
	    return false;
	int amt = item.getAmount() > Settings.CRAFT_RATE*15 ? Settings.CRAFT_RATE*15 : item.getAmount();
	if(amt > 1 && !player.getInventory().hasFreeSlots()) {
	    player.getPackets().sendGameMessage("Not enough space in your inventory.");
	    return false;
	}
	player.getInventory().deleteItem(item.getId(), amt);
	player.getInventory().addItem(weapon.poisonIds[type], amt);
	player.getInventory().deleteItem(POISON[type], 1);
	player.getInventory().addItem(Pots.VIAL, 1);
	player.getPackets().sendGameMessage("You dip the tip of the "+item.getName()+" in the weapon poison.");
	return true;
    }

}
